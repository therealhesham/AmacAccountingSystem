// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model User {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  email String  @unique
  name  String?
  // creadted Double_Entry
  // Created Double_Entry?
  }



model Deposit{
id String @id @default(auto()) @map("_id") @db.ObjectId
SupplierName String 
SupplierNameID String ?
Date          String
Amount String? // what he got
Quantity String? //what he supplied as a material



}


model Supplier{
id String @id @default(auto()) @map("_id") @db.ObjectId
Name String @unique
Type String?
Date  String?
Amount Float? @default(0)// what he got 
Quantity String? //what he supplied as a material
Unit  String? 
Price String?
RealAmount Float?

}
model Bank_Account{
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  BankName String?
  Type     String?
  Quantity Float
  Date     String?  @unique
}

model Safe{

  id    String @id @default(auto()) @map("_id") @db.ObjectId
  Quantity Float
  Name     String?
  Date     String? @unique
}


model Double_Entry{

id    String @id @default(auto()) @map("_id") @db.ObjectId
CreditType String?
CreditName String
DebitName String
CreditAmount Int

DebitAmount Int
Notes       String?
date        String?
settled      Boolean?
unix_time_stamp DateTime @default(now())
transferred   Boolean?

}



model Transfering{
id              String @id @default(auto()) @map("_id") @db.ObjectId
unix_timestamp  String      
status          Boolean?
bankaccount     String?  @unique @db.ObjectId
safe            String?   @unique @db.ObjectId



  
}
model Legacy_Double_Entry{

id    String @id @default(auto()) @map("_id") @db.ObjectId
CreditType String?
CreditName String
DebitName String
CreditAmount Int

DebitAmount Int
Notes       String?
date        String?
settled      Boolean?
unix_time_stamp DateTime @default(now())
transferred   Boolean?

}

model Asset{
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  AssetName String
  Cost      Int


}


model Benefiary {
id    String @id @default(auto()) @map("_id") @db.ObjectId
Name String @unique
Type String?
Amount Int? 
Clauses Settlement[]
NewpettyCash PettyCash[]
}
model Settlement{
id    String @id @default(auto()) @map("_id") @db.ObjectId
Clauses String
Amount  Float
BeneficiaryID Benefiary @relation(fields: [BenefciaryID],references: [Name])
BenefciaryID String 
Date    String

}
model Contractor{


  id String @db.ObjectId @map("_id") @id @default(auto())


  
}
model PettyCash{
amount Float
Name String?
Date String
id String @id @default(auto()) @map("_id") @db.ObjectId 
Benefciary Benefiary @relation(fields: [BenefciaryID],references: [Name])
BenefciaryID String 
isSettled Boolean 
}
